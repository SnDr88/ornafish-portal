import { InjectionToken } from '@angular/core';
export const TRANSLOCO_CONFIG = new InjectionToken('TRANSLOCO_CONFIG', {
    providedIn: 'root',
    factory: () => defaultConfig,
});
export const defaultConfig = {
    defaultLang: 'en',
    reRenderOnLangChange: false,
    prodMode: false,
    failedRetries: 2,
    fallbackLang: [],
    availableLangs: [],
    missingHandler: {
        logMissingKey: true,
        useFallbackTranslation: false,
        allowEmpty: false,
    },
    flatten: {
        aot: false,
    },
    interpolation: ['{{', '}}'],
    scopes: {
        keepCasing: false,
    },
};
export function translocoConfig(config = {}) {
    return {
        ...defaultConfig,
        ...config,
        missingHandler: {
            ...defaultConfig.missingHandler,
            ...config.missingHandler,
        },
        flatten: {
            ...defaultConfig.flatten,
            ...config.flatten,
        },
        scopes: {
            ...defaultConfig.scopes,
            ...config.scopes,
        },
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsb2NvLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvdHJhbnNsb2NvL3NyYy9saWIvdHJhbnNsb2NvLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBeUIvQyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGNBQWMsQ0FDaEQsa0JBQWtCLEVBQ2xCO0lBQ0UsVUFBVSxFQUFFLE1BQU07SUFDbEIsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLGFBQWE7Q0FDN0IsQ0FDRixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFvQjtJQUM1QyxXQUFXLEVBQUUsSUFBSTtJQUNqQixvQkFBb0IsRUFBRSxLQUFLO0lBQzNCLFFBQVEsRUFBRSxLQUFLO0lBQ2YsYUFBYSxFQUFFLENBQUM7SUFDaEIsWUFBWSxFQUFFLEVBQUU7SUFDaEIsY0FBYyxFQUFFLEVBQUU7SUFDbEIsY0FBYyxFQUFFO1FBQ2QsYUFBYSxFQUFFLElBQUk7UUFDbkIsc0JBQXNCLEVBQUUsS0FBSztRQUM3QixVQUFVLEVBQUUsS0FBSztLQUNsQjtJQUNELE9BQU8sRUFBRTtRQUNQLEdBQUcsRUFBRSxLQUFLO0tBQ1g7SUFDRCxhQUFhLEVBQUUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDO0lBQzNCLE1BQU0sRUFBRTtRQUNOLFVBQVUsRUFBRSxLQUFLO0tBQ2xCO0NBQ0YsQ0FBQztBQVdGLE1BQU0sVUFBVSxlQUFlLENBQzdCLFNBQWlDLEVBQUU7SUFFbkMsT0FBTztRQUNMLEdBQUcsYUFBYTtRQUNoQixHQUFHLE1BQU07UUFDVCxjQUFjLEVBQUU7WUFDZCxHQUFHLGFBQWEsQ0FBQyxjQUFjO1lBQy9CLEdBQUcsTUFBTSxDQUFDLGNBQWM7U0FDekI7UUFDRCxPQUFPLEVBQUU7WUFDUCxHQUFHLGFBQWEsQ0FBQyxPQUFPO1lBQ3hCLEdBQUcsTUFBTSxDQUFDLE9BQU87U0FDbEI7UUFDRCxNQUFNLEVBQUU7WUFDTixHQUFHLGFBQWEsQ0FBQyxNQUFNO1lBQ3ZCLEdBQUcsTUFBTSxDQUFDLE1BQU07U0FDakI7S0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEF2YWlsYWJsZUxhbmdzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNsb2NvQ29uZmlnIHtcbiAgZGVmYXVsdExhbmc6IHN0cmluZztcbiAgcmVSZW5kZXJPbkxhbmdDaGFuZ2U6IGJvb2xlYW47XG4gIHByb2RNb2RlOiBib29sZWFuO1xuICBmYWxsYmFja0xhbmc/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgZmFpbGVkUmV0cmllczogbnVtYmVyO1xuICBhdmFpbGFibGVMYW5nczogQXZhaWxhYmxlTGFuZ3M7XG4gIGZsYXR0ZW46IHtcbiAgICBhb3Q6IGJvb2xlYW47XG4gIH07XG4gIG1pc3NpbmdIYW5kbGVyOiB7XG4gICAgbG9nTWlzc2luZ0tleTogYm9vbGVhbjtcbiAgICB1c2VGYWxsYmFja1RyYW5zbGF0aW9uOiBib29sZWFuO1xuICAgIGFsbG93RW1wdHk6IGJvb2xlYW47XG4gIH07XG4gIGludGVycG9sYXRpb246IFtzdHJpbmcsIHN0cmluZ107XG4gIHNjb3Blczoge1xuICAgIGtlZXBDYXNpbmc/OiBib29sZWFuO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgVFJBTlNMT0NPX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUcmFuc2xvY29Db25maWc+KFxuICAnVFJBTlNMT0NPX0NPTkZJRycsXG4gIHtcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXG4gICAgZmFjdG9yeTogKCkgPT4gZGVmYXVsdENvbmZpZyxcbiAgfSxcbik7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0Q29uZmlnOiBUcmFuc2xvY29Db25maWcgPSB7XG4gIGRlZmF1bHRMYW5nOiAnZW4nLFxuICByZVJlbmRlck9uTGFuZ0NoYW5nZTogZmFsc2UsXG4gIHByb2RNb2RlOiBmYWxzZSxcbiAgZmFpbGVkUmV0cmllczogMixcbiAgZmFsbGJhY2tMYW5nOiBbXSxcbiAgYXZhaWxhYmxlTGFuZ3M6IFtdLFxuICBtaXNzaW5nSGFuZGxlcjoge1xuICAgIGxvZ01pc3NpbmdLZXk6IHRydWUsXG4gICAgdXNlRmFsbGJhY2tUcmFuc2xhdGlvbjogZmFsc2UsXG4gICAgYWxsb3dFbXB0eTogZmFsc2UsXG4gIH0sXG4gIGZsYXR0ZW46IHtcbiAgICBhb3Q6IGZhbHNlLFxuICB9LFxuICBpbnRlcnBvbGF0aW9uOiBbJ3t7JywgJ319J10sXG4gIHNjb3Blczoge1xuICAgIGtlZXBDYXNpbmc6IGZhbHNlLFxuICB9LFxufTtcblxudHlwZSBEZWVwUGFydGlhbDxUPiA9XG4gIFQgZXh0ZW5kcyBBcnJheTxhbnk+XG4gICAgPyBUXG4gICAgOiBUIGV4dGVuZHMgb2JqZWN0XG4gICAgICA/IHsgW1AgaW4ga2V5b2YgVF0/OiBEZWVwUGFydGlhbDxUW1BdPiB9XG4gICAgICA6IFQ7XG5cbmV4cG9ydCB0eXBlIFBhcnRpYWxUcmFuc2xvY29Db25maWcgPSBEZWVwUGFydGlhbDxUcmFuc2xvY29Db25maWc+O1xuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNsb2NvQ29uZmlnKFxuICBjb25maWc6IFBhcnRpYWxUcmFuc2xvY29Db25maWcgPSB7fSxcbik6IFRyYW5zbG9jb0NvbmZpZyB7XG4gIHJldHVybiB7XG4gICAgLi4uZGVmYXVsdENvbmZpZyxcbiAgICAuLi5jb25maWcsXG4gICAgbWlzc2luZ0hhbmRsZXI6IHtcbiAgICAgIC4uLmRlZmF1bHRDb25maWcubWlzc2luZ0hhbmRsZXIsXG4gICAgICAuLi5jb25maWcubWlzc2luZ0hhbmRsZXIsXG4gICAgfSxcbiAgICBmbGF0dGVuOiB7XG4gICAgICAuLi5kZWZhdWx0Q29uZmlnLmZsYXR0ZW4sXG4gICAgICAuLi5jb25maWcuZmxhdHRlbixcbiAgICB9LFxuICAgIHNjb3Blczoge1xuICAgICAgLi4uZGVmYXVsdENvbmZpZy5zY29wZXMsXG4gICAgICAuLi5jb25maWcuc2NvcGVzLFxuICAgIH0sXG4gIH07XG59XG4iXX0=