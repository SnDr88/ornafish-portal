{
  "version": 3,
  "sources": ["src/@fuse/services/utils/utils.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { IsActiveMatchOptions } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class FuseUtilsService {\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = true\".\n     */\n    get exactMatchOptions(): IsActiveMatchOptions {\n        return {\n            paths: 'exact',\n            fragment: 'ignored',\n            matrixParams: 'ignored',\n            queryParams: 'exact',\n        };\n    }\n\n    /**\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = false\".\n     */\n    get subsetMatchOptions(): IsActiveMatchOptions {\n        return {\n            paths: 'subset',\n            fragment: 'ignored',\n            matrixParams: 'ignored',\n            queryParams: 'subset',\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Generates a random id\n     *\n     * @param length\n     */\n    randomId(length: number = 10): string {\n        const chars =\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let name = '';\n\n        for (let i = 0; i < 10; i++) {\n            name += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n\n        return name;\n    }\n}\n"],
  "mappings": "yCAIA,IAAaA,GAAgB,IAAA,CAAvB,MAAOA,CAAgB,CAQzB,IAAIC,mBAAiB,CACjB,MAAO,CACHC,MAAO,QACPC,SAAU,UACVC,aAAc,UACdC,YAAa,QAErB,CAKA,IAAIC,oBAAkB,CAClB,MAAO,CACHJ,MAAO,SACPC,SAAU,UACVC,aAAc,UACdC,YAAa,SAErB,CAWAE,SAASC,EAAiB,GAAE,CACxB,IAAMC,EACF,iEACAC,EAAO,GAEX,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,GAAQD,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,OAAM,EAAKN,EAAMD,MAAM,CAAC,EAGjE,OAAOE,CACX,iDAhDSV,EAAgB,CAAA,iCAAhBA,EAAgBgB,QAAhBhB,EAAgBiB,UAAAC,WADH,MAAM,CAAA,CAAA,SACnBlB,CAAgB,GAAA",
  "names": ["FuseUtilsService", "exactMatchOptions", "paths", "fragment", "matrixParams", "queryParams", "subsetMatchOptions", "randomId", "length", "chars", "name", "i", "charAt", "Math", "floor", "random", "factory", "\u0275fac", "providedIn"]
}
