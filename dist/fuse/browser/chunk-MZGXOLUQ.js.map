{
  "version": 3,
  "sources": ["src/app/modules/auth/forgot-password/forgot-password.component.ts", "src/app/modules/auth/forgot-password/forgot-password.component.html", "src/app/modules/auth/forgot-password/forgot-password.routes.ts"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    FormsModule,\n    NgForm,\n    ReactiveFormsModule,\n    UntypedFormBuilder,\n    UntypedFormGroup,\n    Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RouterLink } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { finalize } from 'rxjs';\n\n@Component({\n    selector: 'auth-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: fuseAnimations,\n    imports: [\n        FuseAlertComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n        RouterLink,\n    ],\n})\nexport class AuthForgotPasswordComponent implements OnInit {\n    @ViewChild('forgotPasswordNgForm') forgotPasswordNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type: 'success',\n        message: '',\n    };\n    forgotPasswordForm: UntypedFormGroup;\n    showAlert: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _authService: AuthService,\n        private _formBuilder: UntypedFormBuilder\n    ) {}\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Create the form\n        this.forgotPasswordForm = this._formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Send the reset link\n     */\n    sendResetLink(): void {\n        // Return if the form is invalid\n        if (this.forgotPasswordForm.invalid) {\n            return;\n        }\n\n        // Disable the form\n        this.forgotPasswordForm.disable();\n\n        // Hide the alert\n        this.showAlert = false;\n\n        // Forgot password\n        this._authService\n            .forgotPassword(this.forgotPasswordForm.get('email').value)\n            .pipe(\n                finalize(() => {\n                    // Re-enable the form\n                    this.forgotPasswordForm.enable();\n\n                    // Reset the form\n                    this.forgotPasswordNgForm.resetForm();\n\n                    // Show the alert\n                    this.showAlert = true;\n                })\n            )\n            .subscribe(\n                (response) => {\n                    // Set the alert\n                    this.alert = {\n                        type: 'success',\n                        message:\n                            \"Password reset sent! You'll receive an email if you are registered on our system.\",\n                    };\n                },\n                (response) => {\n                    // Set the alert\n                    this.alert = {\n                        type: 'error',\n                        message:\n                            'Email does not found! Are you sure you are already a member?',\n                    };\n                }\n            );\n    }\n}\n", "<div\n    class=\"flex min-w-0 flex-auto flex-col items-center sm:flex-row sm:justify-center md:items-start md:justify-start\"\n>\n    <div\n        class=\"w-full px-4 py-8 sm:bg-card sm:w-auto sm:rounded-2xl sm:p-12 sm:shadow md:flex md:h-full md:w-1/2 md:items-center md:justify-end md:rounded-none md:p-16 md:shadow-none\"\n    >\n        <div class=\"mx-auto w-full max-w-80 sm:mx-0 sm:w-80\">\n            <!-- Logo -->\n            <div class=\"w-12\">\n                <img src=\"images/logo/logo.svg\" />\n            </div>\n\n            <!-- Title -->\n            <div\n                class=\"mt-8 text-4xl font-extrabold leading-tight tracking-tight\"\n            >\n                Forgot password?\n            </div>\n            <div class=\"mt-0.5 font-medium\">\n                Fill the form to reset your password\n            </div>\n\n            <!-- Alert -->\n            @if (showAlert) {\n                <fuse-alert\n                    class=\"mt-8\"\n                    [appearance]=\"'outline'\"\n                    [showIcon]=\"false\"\n                    [type]=\"alert.type\"\n                    [@shake]=\"alert.type === 'error'\"\n                >\n                    {{ alert.message }}\n                </fuse-alert>\n            }\n\n            <!-- Forgot password form -->\n            <form\n                class=\"mt-8\"\n                [formGroup]=\"forgotPasswordForm\"\n                #forgotPasswordNgForm=\"ngForm\"\n            >\n                <!-- Email field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Email address</mat-label>\n                    <input id=\"email\" matInput [formControlName]=\"'email'\" />\n                    @if (forgotPasswordForm.get('email').hasError('required')) {\n                        <mat-error> Email address is required </mat-error>\n                    }\n                    @if (forgotPasswordForm.get('email').hasError('email')) {\n                        <mat-error>\n                            Please enter a valid email address\n                        </mat-error>\n                    }\n                </mat-form-field>\n\n                <!-- Submit button -->\n                <button\n                    class=\"fuse-mat-button-large mt-3 w-full\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [disabled]=\"forgotPasswordForm.disabled\"\n                    (click)=\"sendResetLink()\"\n                >\n                    @if (!forgotPasswordForm.disabled) {\n                        <span> Send reset link </span>\n                    }\n                    @if (forgotPasswordForm.disabled) {\n                        <mat-progress-spinner\n                            [diameter]=\"24\"\n                            [mode]=\"'indeterminate'\"\n                        ></mat-progress-spinner>\n                    }\n                </button>\n\n                <!-- Form footer -->\n                <div class=\"text-secondary mt-8 text-md font-medium\">\n                    <span>Return to</span>\n                    <a\n                        class=\"ml-1 text-primary-500 hover:underline\"\n                        [routerLink]=\"['/sign-in']\"\n                        >sign in\n                    </a>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div\n        class=\"relative hidden h-full w-1/2 flex-auto items-center justify-center overflow-hidden bg-gray-800 p-16 dark:border-l md:flex lg:px-28\"\n    >\n        <!-- Background -->\n        <!-- Rings -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute inset-0 pointer-events-none\"\n             viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n            </g>\n        </svg>\n        <!-- Dots -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\"\n             viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\n            <defs>\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n                </pattern>\n            </defs>\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n        </svg>\n        <!-- Content -->\n        <div class=\"relative z-10 w-full max-w-2xl\">\n            <div class=\"text-7xl font-bold leading-none text-gray-100\">\n                <div>Welcome to</div>\n                <div>our community</div>\n            </div>\n            <div class=\"mt-6 text-lg leading-6 tracking-tight text-gray-400\">\n                Fuse helps developers to build organized and well coded\n                dashboards full of beautiful and rich modules. Join us and start\n                building your application today.\n            </div>\n            <div class=\"mt-8 flex items-center\">\n                <div class=\"flex flex-0 items-center -space-x-1.5\">\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-18.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-11.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-09.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-16.jpg\"\n                    />\n                </div>\n                <div class=\"ml-4 font-medium tracking-tight text-gray-400\">\n                    More than 17k people joined us, it's your turn\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", "import { Routes } from '@angular/router';\nimport { AuthForgotPasswordComponent } from 'app/modules/auth/forgot-password/forgot-password.component';\n\nexport default [\n    {\n        path: '',\n        component: AuthForgotPasswordComponent,\n    },\n] as Routes;\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "ctx_r1", "alert", "type", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "message", "\u0275\u0275element", "AuthForgotPasswordComponent", "constructor", "_authService", "_formBuilder", "showAlert", "ngOnInit", "forgotPasswordForm", "group", "email", "Validators", "required", "sendResetLink", "invalid", "disable", "forgotPassword", "get", "value", "pipe", "finalize", "enable", "forgotPasswordNgForm", "resetForm", "subscribe", "response", "\u0275\u0275directiveInject", "AuthService", "UntypedFormBuilder", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275template", "AuthForgotPasswordComponent_Conditional_9_Template", "AuthForgotPasswordComponent_Conditional_16_Template", "AuthForgotPasswordComponent_Conditional_17_Template", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "AuthForgotPasswordComponent_Conditional_19_Template", "AuthForgotPasswordComponent_Conditional_20_Template", "\u0275\u0275conditional", "hasError", "disabled", "\u0275\u0275pureFunction0", "_c1", "FuseAlertComponent", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "MatFormFieldModule", "MatFormField", "MatLabel", "MatError", "MatInputModule", "MatInput", "MatButtonModule", "MatButton", "MatProgressSpinnerModule", "MatProgressSpinner", "RouterLink", "encapsulation", "data", "animation", "fuseAnimations", "forgot_password_routes_default", "path", "component", "AuthForgotPasswordComponent"]
}
