{
  "version": 3,
  "sources": ["src/app/modules/auth/sign-up/sign-up.component.ts", "src/app/modules/auth/sign-up/sign-up.component.html", "src/app/modules/auth/sign-up/sign-up.routes.ts"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    FormsModule,\n    NgForm,\n    ReactiveFormsModule,\n    UntypedFormBuilder,\n    UntypedFormGroup,\n    Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Router, RouterLink } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Component({\n    selector: 'auth-sign-up',\n    templateUrl: './sign-up.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: fuseAnimations,\n    imports: [\n        RouterLink,\n        FuseAlertComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n    ],\n})\nexport class AuthSignUpComponent implements OnInit {\n    @ViewChild('signUpNgForm') signUpNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type: 'success',\n        message: '',\n    };\n    signUpForm: UntypedFormGroup;\n    showAlert: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _authService: AuthService,\n        private _formBuilder: UntypedFormBuilder,\n        private _router: Router\n    ) {}\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Create the form\n        this.signUpForm = this._formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required],\n            company: [''],\n            agreements: ['', Validators.requiredTrue],\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Sign up\n     */\n    signUp(): void {\n        // Do nothing if the form is invalid\n        if (this.signUpForm.invalid) {\n            return;\n        }\n\n        // Disable the form\n        this.signUpForm.disable();\n\n        // Hide the alert\n        this.showAlert = false;\n\n        // Sign up\n        this._authService.signUp(this.signUpForm.value).subscribe(\n            (response) => {\n                // Navigate to the confirmation required page\n                this._router.navigateByUrl('/confirmation-required');\n            },\n            (response) => {\n                // Re-enable the form\n                this.signUpForm.enable();\n\n                // Reset the form\n                this.signUpNgForm.resetForm();\n\n                // Set the alert\n                this.alert = {\n                    type: 'error',\n                    message: 'Something went wrong, please try again.',\n                };\n\n                // Show the alert\n                this.showAlert = true;\n            }\n        );\n    }\n}\n", "<div\n    class=\"flex min-w-0 flex-auto flex-col items-center sm:flex-row sm:justify-center md:items-start md:justify-start\"\n>\n    <div\n        class=\"w-full px-4 py-8 sm:bg-card sm:w-auto sm:rounded-2xl sm:p-12 sm:shadow md:flex md:h-full md:w-1/2 md:items-center md:justify-end md:rounded-none md:p-16 md:shadow-none\"\n    >\n        <div class=\"mx-auto w-full max-w-80 sm:mx-0 sm:w-80\">\n            <!-- Logo -->\n            <div class=\"w-12\">\n                <img src=\"images/logo/logo.svg\" />\n            </div>\n\n            <!-- Title -->\n            <div\n                class=\"mt-8 text-4xl font-extrabold leading-tight tracking-tight\"\n            >\n                Sign up\n            </div>\n            <div class=\"mt-0.5 flex items-baseline font-medium\">\n                <div>Already have an account?</div>\n                <a\n                    class=\"ml-1 text-primary-500 hover:underline\"\n                    [routerLink]=\"['/sign-in']\"\n                    >Sign in\n                </a>\n            </div>\n\n            <!-- Alert -->\n            @if (showAlert) {\n                <fuse-alert\n                    class=\"mt-8\"\n                    [appearance]=\"'outline'\"\n                    [showIcon]=\"false\"\n                    [type]=\"alert.type\"\n                    [@shake]=\"alert.type === 'error'\"\n                >\n                    {{ alert.message }}\n                </fuse-alert>\n            }\n\n            <!-- Sign Up form -->\n            <form class=\"mt-8\" [formGroup]=\"signUpForm\" #signUpNgForm=\"ngForm\">\n                <!-- Name field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Full name</mat-label>\n                    <input id=\"name\" matInput [formControlName]=\"'name'\" />\n                    @if (signUpForm.get('name').hasError('required')) {\n                        <mat-error> Full name is required </mat-error>\n                    }\n                </mat-form-field>\n\n                <!-- Email field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Email address</mat-label>\n                    <input id=\"email\" matInput [formControlName]=\"'email'\" />\n                    @if (signUpForm.get('email').hasError('required')) {\n                        <mat-error> Email address is required </mat-error>\n                    }\n                    @if (signUpForm.get('email').hasError('email')) {\n                        <mat-error>\n                            Please enter a valid email address\n                        </mat-error>\n                    }\n                </mat-form-field>\n\n                <!-- Password field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Password</mat-label>\n                    <input\n                        id=\"password\"\n                        matInput\n                        type=\"password\"\n                        [formControlName]=\"'password'\"\n                        #passwordField\n                    />\n                    <button\n                        mat-icon-button\n                        type=\"button\"\n                        (click)=\"\n                            passwordField.type === 'password'\n                                ? (passwordField.type = 'text')\n                                : (passwordField.type = 'password')\n                        \"\n                        matSuffix\n                    >\n                        @if (passwordField.type === 'password') {\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:eye'\"\n                            ></mat-icon>\n                        }\n                        @if (passwordField.type === 'text') {\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:eye-slash'\"\n                            ></mat-icon>\n                        }\n                    </button>\n                    <mat-error> Password is required </mat-error>\n                </mat-form-field>\n\n                <!-- Company field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Company</mat-label>\n                    <input\n                        id=\"company-confirm\"\n                        matInput\n                        [formControlName]=\"'company'\"\n                    />\n                </mat-form-field>\n\n                <!-- ToS and PP -->\n                <div class=\"mt-1.5 inline-flex w-full items-end\">\n                    <mat-checkbox\n                        class=\"-ml-2\"\n                        [color]=\"'primary'\"\n                        [formControlName]=\"'agreements'\"\n                    >\n                        <span>I agree with</span>\n                        <a\n                            class=\"ml-1 text-primary-500 hover:underline\"\n                            [routerLink]=\"['./']\"\n                            >Terms\n                        </a>\n                        <span>and</span>\n                        <a\n                            class=\"ml-1 text-primary-500 hover:underline\"\n                            [routerLink]=\"['./']\"\n                            >Privacy Policy\n                        </a>\n                    </mat-checkbox>\n                </div>\n\n                <!-- Submit button -->\n                <button\n                    class=\"fuse-mat-button-large mt-6 w-full\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [disabled]=\"signUpForm.disabled\"\n                    (click)=\"signUp()\"\n                >\n                    @if (!signUpForm.disabled) {\n                        <span> Create your free account </span>\n                    }\n                    @if (signUpForm.disabled) {\n                        <mat-progress-spinner\n                            [diameter]=\"24\"\n                            [mode]=\"'indeterminate'\"\n                        ></mat-progress-spinner>\n                    }\n                </button>\n            </form>\n        </div>\n    </div>\n    <div\n        class=\"relative hidden h-full w-1/2 flex-auto items-center justify-center overflow-hidden bg-gray-800 p-16 dark:border-l md:flex lg:px-28\"\n    >\n        <!-- Background -->\n        <!-- Rings -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute inset-0 pointer-events-none\"\n             viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n            </g>\n        </svg>\n        <!-- Dots -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\"\n             viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\n            <defs>\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n                </pattern>\n            </defs>\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n        </svg>\n        <!-- Content -->\n        <div class=\"relative z-10 w-full max-w-2xl\">\n            <div class=\"text-7xl font-bold leading-none text-gray-100\">\n                <div>Welcome to</div>\n                <div>our community</div>\n            </div>\n            <div class=\"mt-6 text-lg leading-6 tracking-tight text-gray-400\">\n                Fuse helps developers to build organized and well coded\n                dashboards full of beautiful and rich modules. Join us and start\n                building your application today.\n            </div>\n            <div class=\"mt-8 flex items-center\">\n                <div class=\"flex flex-0 items-center -space-x-1.5\">\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-18.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-11.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-09.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-16.jpg\"\n                    />\n                </div>\n                <div class=\"ml-4 font-medium tracking-tight text-gray-400\">\n                    More than 17k people joined us, it's your turn\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", "import { Routes } from '@angular/router';\nimport { AuthSignUpComponent } from 'app/modules/auth/sign-up/sign-up.component';\n\nexport default [\n    {\n        path: '',\n        component: AuthSignUpComponent,\n    },\n] as Routes;\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "ctx_r1", "alert", "type", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "message", "\u0275\u0275element", "AuthSignUpComponent", "constructor", "_authService", "_formBuilder", "_router", "showAlert", "ngOnInit", "signUpForm", "group", "name", "Validators", "required", "email", "password", "company", "agreements", "requiredTrue", "signUp", "invalid", "disable", "value", "subscribe", "response", "navigateByUrl", "enable", "signUpNgForm", "resetForm", "\u0275\u0275directiveInject", "AuthService", "UntypedFormBuilder", "Router", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275template", "AuthSignUpComponent_Conditional_12_Template", "AuthSignUpComponent_Conditional_19_Template", "AuthSignUpComponent_Conditional_24_Template", "AuthSignUpComponent_Conditional_25_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "passwordField_r3", "\u0275\u0275reference", "\u0275\u0275resetView", "AuthSignUpComponent_Conditional_32_Template", "AuthSignUpComponent_Conditional_33_Template", "i0", "AuthSignUpComponent_Conditional_51_Template", "AuthSignUpComponent_Conditional_52_Template", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275conditional", "get", "hasError", "_c2", "disabled", "RouterLink", "FuseAlertComponent", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "MatFormFieldModule", "MatFormField", "MatLabel", "MatError", "MatSuffix", "MatInputModule", "MatInput", "MatButtonModule", "MatButton", "MatIconButton", "MatIconModule", "MatIcon", "MatCheckboxModule", "MatCheckbox", "MatProgressSpinnerModule", "MatProgressSpinner", "encapsulation", "data", "animation", "fuseAnimations", "sign_up_routes_default", "path", "component", "AuthSignUpComponent"]
}
