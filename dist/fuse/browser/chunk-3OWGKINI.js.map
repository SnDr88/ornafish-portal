{
  "version": 3,
  "sources": ["src/@fuse/components/alert/alert.service.ts", "src/@fuse/components/alert/alert.component.ts", "src/@fuse/components/alert/alert.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class FuseAlertService {\n    private readonly _onDismiss: ReplaySubject<string> =\n        new ReplaySubject<string>(1);\n    private readonly _onShow: ReplaySubject<string> = new ReplaySubject<string>(\n        1\n    );\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for onDismiss\n     */\n    get onDismiss(): Observable<any> {\n        return this._onDismiss.asObservable();\n    }\n\n    /**\n     * Getter for onShow\n     */\n    get onShow(): Observable<any> {\n        return this._onShow.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss the alert\n     *\n     * @param name\n     */\n    dismiss(name: string): void {\n        // Return if the name is not provided\n        if (!name) {\n            return;\n        }\n\n        // Execute the observable\n        this._onDismiss.next(name);\n    }\n\n    /**\n     * Show the dismissed alert\n     *\n     * @param name\n     */\n    show(name: string): void {\n        // Return if the name is not provided\n        if (!name) {\n            return;\n        }\n\n        // Execute the observable\n        this._onShow.next(name);\n    }\n}\n", "import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation,\n    inject,\n} from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertService } from '@fuse/components/alert/alert.service';\nimport {\n    FuseAlertAppearance,\n    FuseAlertType,\n} from '@fuse/components/alert/alert.types';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\nimport { Subject, filter, takeUntil } from 'rxjs';\n\n@Component({\n    selector: 'fuse-alert',\n    templateUrl: './alert.component.html',\n    styleUrls: ['./alert.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: fuseAnimations,\n    exportAs: 'fuseAlert',\n    imports: [MatIconModule, MatButtonModule],\n})\nexport class FuseAlertComponent implements OnChanges, OnInit, OnDestroy {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_dismissible: BooleanInput;\n    static ngAcceptInputType_dismissed: BooleanInput;\n    static ngAcceptInputType_showIcon: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    private _changeDetectorRef = inject(ChangeDetectorRef);\n    private _fuseAlertService = inject(FuseAlertService);\n    private _fuseUtilsService = inject(FuseUtilsService);\n\n    @Input() appearance: FuseAlertAppearance = 'soft';\n    @Input() dismissed: boolean = false;\n    @Input() dismissible: boolean = false;\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() showIcon: boolean = true;\n    @Input() type: FuseAlertType = 'primary';\n    @Output() readonly dismissedChanged: EventEmitter<boolean> =\n        new EventEmitter<boolean>();\n\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-alert-appearance-border': this.appearance === 'border',\n            'fuse-alert-appearance-fill': this.appearance === 'fill',\n            'fuse-alert-appearance-outline': this.appearance === 'outline',\n            'fuse-alert-appearance-soft': this.appearance === 'soft',\n            'fuse-alert-dismissed': this.dismissed,\n            'fuse-alert-dismissible': this.dismissible,\n            'fuse-alert-show-icon': this.showIcon,\n            'fuse-alert-type-primary': this.type === 'primary',\n            'fuse-alert-type-accent': this.type === 'accent',\n            'fuse-alert-type-warn': this.type === 'warn',\n            'fuse-alert-type-basic': this.type === 'basic',\n            'fuse-alert-type-info': this.type === 'info',\n            'fuse-alert-type-success': this.type === 'success',\n            'fuse-alert-type-warning': this.type === 'warning',\n            'fuse-alert-type-error': this.type === 'error',\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        // Dismissed\n        if ('dismissed' in changes) {\n            // Coerce the value to a boolean\n            this.dismissed = coerceBooleanProperty(\n                changes.dismissed.currentValue\n            );\n\n            // Dismiss/show the alert\n            this._toggleDismiss(this.dismissed);\n        }\n\n        // Dismissible\n        if ('dismissible' in changes) {\n            // Coerce the value to a boolean\n            this.dismissible = coerceBooleanProperty(\n                changes.dismissible.currentValue\n            );\n        }\n\n        // Show icon\n        if ('showIcon' in changes) {\n            // Coerce the value to a boolean\n            this.showIcon = coerceBooleanProperty(\n                changes.showIcon.currentValue\n            );\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Subscribe to the dismiss calls\n        this._fuseAlertService.onDismiss\n            .pipe(\n                filter((name) => this.name === name),\n                takeUntil(this._unsubscribeAll)\n            )\n            .subscribe(() => {\n                // Dismiss the alert\n                this.dismiss();\n            });\n\n        // Subscribe to the show calls\n        this._fuseAlertService.onShow\n            .pipe(\n                filter((name) => this.name === name),\n                takeUntil(this._unsubscribeAll)\n            )\n            .subscribe(() => {\n                // Show the alert\n                this.show();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss the alert\n     */\n    dismiss(): void {\n        // Return if the alert is already dismissed\n        if (this.dismissed) {\n            return;\n        }\n\n        // Dismiss the alert\n        this._toggleDismiss(true);\n    }\n\n    /**\n     * Show the dismissed alert\n     */\n    show(): void {\n        // Return if the alert is already showing\n        if (!this.dismissed) {\n            return;\n        }\n\n        // Show the alert\n        this._toggleDismiss(false);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss/show the alert\n     *\n     * @param dismissed\n     * @private\n     */\n    private _toggleDismiss(dismissed: boolean): void {\n        // Return if the alert is not dismissible\n        if (!this.dismissible) {\n            return;\n        }\n\n        // Set the dismissed\n        this.dismissed = dismissed;\n\n        // Execute the observable\n        this.dismissedChanged.next(this.dismissed);\n\n        // Notify the change detector\n        this._changeDetectorRef.markForCheck();\n    }\n}\n", "@if (!dismissible || (dismissible && !dismissed)) {\n    <div\n        class=\"fuse-alert-container\"\n        [@fadeIn]=\"!dismissed\"\n        [@fadeOut]=\"!dismissed\"\n    >\n        <!-- Border -->\n        @if (appearance === 'border') {\n            <div class=\"fuse-alert-border\"></div>\n        }\n\n        <!-- Icon -->\n        @if (showIcon) {\n            <div class=\"fuse-alert-icon\">\n                <!-- Custom icon -->\n                <div class=\"fuse-alert-custom-icon\">\n                    <ng-content select=\"[fuseAlertIcon]\"></ng-content>\n                </div>\n\n                <!-- Default icons -->\n                <div class=\"fuse-alert-default-icon\">\n                    @if (type === 'primary') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:check-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'accent') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:check-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'warn') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:x-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'basic') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:check-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'info') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:information-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'success') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:check-circle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'warning') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:exclamation-triangle'\"\n                        ></mat-icon>\n                    }\n\n                    @if (type === 'error') {\n                        <mat-icon\n                            [svgIcon]=\"'heroicons_solid:x-circle'\"\n                        ></mat-icon>\n                    }\n                </div>\n            </div>\n        }\n\n        <!-- Content -->\n        <div class=\"fuse-alert-content\">\n            <div class=\"fuse-alert-title\">\n                <ng-content select=\"[fuseAlertTitle]\"></ng-content>\n            </div>\n\n            <div class=\"fuse-alert-message\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- Dismiss button -->\n        <button\n            class=\"fuse-alert-dismiss-button\"\n            mat-icon-button\n            (click)=\"dismiss()\"\n        >\n            <mat-icon [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n        </button>\n    </div>\n}\n"],
  "mappings": "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",
  "names": ["FuseAlertService", "constructor", "_onDismiss", "ReplaySubject", "_onShow", "onDismiss", "asObservable", "onShow", "dismiss", "name", "next", "show", "factory", "\u0275fac", "providedIn", "\u0275\u0275element", "\u0275\u0275property", "\u0275\u0275elementStart", "\u0275\u0275projection", "\u0275\u0275elementEnd", "\u0275\u0275template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_4_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_5_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_6_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_7_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_8_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_9_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_10_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Conditional_11_Template", "\u0275\u0275advance", "\u0275\u0275conditional", "ctx_r1", "type", "FuseAlertComponent_Conditional_0_Conditional_1_Template", "FuseAlertComponent_Conditional_0_Conditional_2_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "dismiss", "dismissed", "appearance", "showIcon", "FuseAlertComponent", "constructor", "_changeDetectorRef", "inject", "ChangeDetectorRef", "_fuseAlertService", "FuseAlertService", "_fuseUtilsService", "FuseUtilsService", "dismissible", "name", "randomId", "dismissedChanged", "EventEmitter", "_unsubscribeAll", "Subject", "classList", "ngOnChanges", "changes", "coerceBooleanProperty", "currentValue", "_toggleDismiss", "ngOnInit", "onDismiss", "pipe", "filter", "takeUntil", "subscribe", "onShow", "show", "ngOnDestroy", "next", "complete", "markForCheck", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275classMap", "FuseAlertComponent_Conditional_0_Template", "MatIconModule", "MatIcon", "MatButtonModule", "MatIconButton", "styles", "encapsulation", "data", "animation", "fuseAnimations", "changeDetection"]
}
