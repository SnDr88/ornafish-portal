{
  "version": 3,
  "sources": ["src/app/modules/auth/unlock-session/unlock-session.component.ts", "src/app/modules/auth/unlock-session/unlock-session.component.html", "src/app/modules/auth/unlock-session/unlock-session.routes.ts"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    FormsModule,\n    NgForm,\n    ReactiveFormsModule,\n    UntypedFormBuilder,\n    UntypedFormGroup,\n    Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { UserService } from 'app/core/user/user.service';\n\n@Component({\n    selector: 'auth-unlock-session',\n    templateUrl: './unlock-session.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: fuseAnimations,\n    imports: [\n        FuseAlertComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatButtonModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        RouterLink,\n    ],\n})\nexport class AuthUnlockSessionComponent implements OnInit {\n    @ViewChild('unlockSessionNgForm') unlockSessionNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type: 'success',\n        message: '',\n    };\n    name: string;\n    showAlert: boolean = false;\n    unlockSessionForm: UntypedFormGroup;\n    private _email: string;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _authService: AuthService,\n        private _formBuilder: UntypedFormBuilder,\n        private _router: Router,\n        private _userService: UserService\n    ) {}\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Get the user's name\n        this._userService.user$.subscribe((user) => {\n            this.name = user.first_name + ' ' + user.last_name;\n            this._email = user.email;\n    \n            // Create the form (verplaatst naar binnen de subscribe)\n            this.unlockSessionForm = this._formBuilder.group({\n                name: [\n                    {\n                        value: this.name,\n                        disabled: true,\n                    },\n                ],\n                password: ['', Validators.required],\n            });\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Unlock\n     */\n    unlock(): void {\n        // Return if the form is invalid\n        if (this.unlockSessionForm.invalid) {\n            return;\n        }\n\n        // Disable the form\n        this.unlockSessionForm.disable();\n\n        // Hide the alert\n        this.showAlert = false;\n\n        this._authService\n            .unlockSession({\n                email: this._email ?? '',\n                password: this.unlockSessionForm.get('password').value,\n            })\n            .subscribe(\n                () => {\n                    // Set the redirect url.\n                    // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n                    // to the correct page after a successful sign in. This way, that url can be set via\n                    // routing file and we don't have to touch here.\n                    const redirectURL =\n                        this._activatedRoute.snapshot.queryParamMap.get(\n                            'redirectURL'\n                        ) || '/signed-in-redirect';\n\n                    // Navigate to the redirect url\n                    this._router.navigateByUrl(redirectURL);\n                },\n                (response) => {\n                    // Re-enable the form\n                    this.unlockSessionForm.enable();\n\n                    // Reset the form\n                    this.unlockSessionNgForm.resetForm({\n                        name: {\n                            value: this.name,\n                            disabled: true,\n                        },\n                    });\n\n                    // Set the alert\n                    this.alert = {\n                        type: 'error',\n                        message: 'Invalid password',\n                    };\n\n                    // Show the alert\n                    this.showAlert = true;\n                }\n            );\n    }\n}\n", "<div\n    class=\"flex min-w-0 flex-auto flex-col items-center sm:flex-row sm:justify-center md:items-start md:justify-start\"\n>\n    <div\n        class=\"w-full px-4 py-8 sm:bg-card sm:w-auto sm:rounded-2xl sm:p-12 sm:shadow md:flex md:h-full md:w-1/2 md:items-center md:justify-end md:rounded-none md:p-16 md:shadow-none\"\n    >\n        <div class=\"mx-auto w-full max-w-80 sm:mx-0 sm:w-80\">\n            <!-- Logo -->\n            <div class=\"w-12\">\n                <img src=\"images/logo/logo.svg\" />\n            </div>\n\n            <!-- Title -->\n            <div\n                class=\"mt-8 text-4xl font-extrabold leading-tight tracking-tight\"\n            >\n                Unlock your session\n            </div>\n            <div class=\"mt-0.5 font-medium\">\n                Your session is locked due to inactivity\n            </div>\n\n            <!-- Alert -->\n            @if (showAlert) {\n                <fuse-alert\n                    class=\"mt-8\"\n                    [appearance]=\"'outline'\"\n                    [showIcon]=\"false\"\n                    [type]=\"alert.type\"\n                    [@shake]=\"alert.type === 'error'\"\n                >\n                    {{ alert.message }}\n                </fuse-alert>\n            }\n\n            <!-- Unlock form -->\n            <form\n                class=\"mt-8\"\n                [formGroup]=\"unlockSessionForm\"\n                #unlockSessionNgForm=\"ngForm\"\n            >\n                <!-- Name field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Full name</mat-label>\n                    <input id=\"name\" matInput [formControlName]=\"'name'\" />\n                </mat-form-field>\n\n                <!-- Password field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Password</mat-label>\n                    <input\n                        id=\"password\"\n                        matInput\n                        type=\"password\"\n                        [formControlName]=\"'password'\"\n                        #passwordField\n                    />\n                    <button\n                        mat-icon-button\n                        type=\"button\"\n                        (click)=\"\n                            passwordField.type === 'password'\n                                ? (passwordField.type = 'text')\n                                : (passwordField.type = 'password')\n                        \"\n                        matSuffix\n                    >\n                        @if (passwordField.type === 'password') {\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:eye'\"\n                            ></mat-icon>\n                        }\n                        @if (passwordField.type === 'text') {\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:eye-slash'\"\n                            ></mat-icon>\n                        }\n                    </button>\n                    <mat-error> Password is required </mat-error>\n                </mat-form-field>\n\n                <!-- Submit button -->\n                <button\n                    class=\"fuse-mat-button-large mt-3 w-full\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [disabled]=\"unlockSessionForm.disabled\"\n                    (click)=\"unlock()\"\n                >\n                    @if (!unlockSessionForm.disabled) {\n                        <span> Unlock your session </span>\n                    }\n                    @if (unlockSessionForm.disabled) {\n                        <mat-progress-spinner\n                            [diameter]=\"24\"\n                            [mode]=\"'indeterminate'\"\n                        ></mat-progress-spinner>\n                    }\n                </button>\n\n                <!-- Form footer -->\n                <div class=\"text-secondary mt-8 text-md font-medium\">\n                    <span>I'm not</span>\n                    <a\n                        class=\"ml-1 text-primary-500 hover:underline\"\n                        [routerLink]=\"['/sign-out']\"\n                        >{{ name }}</a\n                    >\n                </div>\n            </form>\n        </div>\n    </div>\n    <div\n        class=\"relative hidden h-full w-1/2 flex-auto items-center justify-center overflow-hidden bg-gray-800 p-16 dark:border-l md:flex lg:px-28\"\n    >\n        <!-- Background -->\n        <!-- Rings -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute inset-0 pointer-events-none\"\n             viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n            </g>\n        </svg>\n        <!-- Dots -->\n        <!-- prettier-ignore -->\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\"\n             viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\n            <defs>\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n                </pattern>\n            </defs>\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n        </svg>\n        <!-- Content -->\n        <div class=\"relative z-10 w-full max-w-2xl\">\n            <div class=\"text-7xl font-bold leading-none text-gray-100\">\n                <div>Welcome to</div>\n                <div>our community</div>\n            </div>\n            <div class=\"mt-6 text-lg leading-6 tracking-tight text-gray-400\">\n                Fuse helps developers to build organized and well coded\n                dashboards full of beautiful and rich modules. Join us and start\n                building your application today.\n            </div>\n            <div class=\"mt-8 flex items-center\">\n                <div class=\"flex flex-0 items-center -space-x-1.5\">\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-18.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/female-11.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-09.jpg\"\n                    />\n                    <img\n                        class=\"h-10 w-10 flex-0 rounded-full object-cover ring-4 ring-gray-800 ring-offset-1 ring-offset-gray-800\"\n                        src=\"images/avatars/male-16.jpg\"\n                    />\n                </div>\n                <div class=\"ml-4 font-medium tracking-tight text-gray-400\">\n                    More than 17k people joined us, it's your turn\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", "import { Routes } from '@angular/router';\nimport { AuthUnlockSessionComponent } from 'app/modules/auth/unlock-session/unlock-session.component';\n\nexport default [\n    {\n        path: '',\n        component: AuthUnlockSessionComponent,\n    },\n] as Routes;\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "ctx_r1", "alert", "type", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "message", "\u0275\u0275element", "AuthUnlockSessionComponent", "constructor", "_activatedRoute", "_authService", "_formBuilder", "_router", "_userService", "showAlert", "ngOnInit", "user$", "subscribe", "user", "name", "first_name", "last_name", "_email", "email", "unlockSessionForm", "group", "value", "disabled", "password", "Validators", "required", "unlock", "invalid", "disable", "unlockSession", "get", "redirectURL", "snapshot", "queryParamMap", "navigateByUrl", "response", "enable", "unlockSessionNgForm", "resetForm", "\u0275\u0275directiveInject", "ActivatedRoute", "AuthService", "UntypedFormBuilder", "Router", "UserService", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275template", "AuthUnlockSessionComponent_Conditional_9_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "passwordField_r3", "\u0275\u0275reference", "\u0275\u0275resetView", "AuthUnlockSessionComponent_Conditional_22_Template", "AuthUnlockSessionComponent_Conditional_23_Template", "i0", "AuthUnlockSessionComponent_Conditional_27_Template", "AuthUnlockSessionComponent_Conditional_28_Template", "\u0275\u0275conditional", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275textInterpolate", "FuseAlertComponent", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "MatFormFieldModule", "MatFormField", "MatLabel", "MatError", "MatSuffix", "MatInputModule", "MatInput", "MatButtonModule", "MatButton", "MatIconButton", "MatIconModule", "MatIcon", "MatProgressSpinnerModule", "MatProgressSpinner", "RouterLink", "encapsulation", "data", "animation", "fuseAnimations", "unlock_session_routes_default", "path", "component", "AuthUnlockSessionComponent"]
}
